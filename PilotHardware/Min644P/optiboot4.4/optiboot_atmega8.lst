
optiboot_atmega8.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001f8  00001e00  00001e00  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .version      00000002  00001ffe  00001ffe  0000024c  2**0
                  CONTENTS, READONLY
  2 .stab         00000bb8  00000000  00000000  00000250  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000a23  00000000  00000000  00000e08  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00001e00 <main>:
    1e00:	11 24       	eor	r1, r1
    1e02:	8f e5       	ldi	r24, 0x5F	; 95
    1e04:	94 e0       	ldi	r25, 0x04	; 4
    1e06:	9e bf       	out	0x3e, r25	; 62
    1e08:	8d bf       	out	0x3d, r24	; 61
    1e0a:	84 b7       	in	r24, 0x34	; 52
    1e0c:	14 be       	out	0x34, r1	; 52
    1e0e:	81 ff       	sbrs	r24, 1
    1e10:	ee d0       	rcall	.+476    	; 0x1fee <appStart>
    1e12:	85 e0       	ldi	r24, 0x05	; 5
    1e14:	8e bd       	out	0x2e, r24	; 46
    1e16:	82 e0       	ldi	r24, 0x02	; 2
    1e18:	8b b9       	out	0x0b, r24	; 11
    1e1a:	88 e1       	ldi	r24, 0x18	; 24
    1e1c:	8a b9       	out	0x0a, r24	; 10
    1e1e:	86 e8       	ldi	r24, 0x86	; 134
    1e20:	80 bd       	out	0x20, r24	; 32
    1e22:	80 e1       	ldi	r24, 0x10	; 16
    1e24:	89 b9       	out	0x09, r24	; 9
    1e26:	8e e0       	ldi	r24, 0x0E	; 14
    1e28:	ce d0       	rcall	.+412    	; 0x1fc6 <watchdogConfig>
    1e2a:	bd 9a       	sbi	0x17, 5	; 23
    1e2c:	26 e0       	ldi	r18, 0x06	; 6
    1e2e:	80 e3       	ldi	r24, 0x30	; 48
    1e30:	9c ef       	ldi	r25, 0xFC	; 252
    1e32:	54 e0       	ldi	r21, 0x04	; 4
    1e34:	40 e2       	ldi	r20, 0x20	; 32
    1e36:	9d bd       	out	0x2d, r25	; 45
    1e38:	8c bd       	out	0x2c, r24	; 44
    1e3a:	58 bf       	out	0x38, r21	; 56
    1e3c:	08 b6       	in	r0, 0x38	; 56
    1e3e:	02 fe       	sbrs	r0, 2
    1e40:	fd cf       	rjmp	.-6      	; 0x1e3c <main+0x3c>
    1e42:	38 b3       	in	r19, 0x18	; 24
    1e44:	34 27       	eor	r19, r20
    1e46:	38 bb       	out	0x18, r19	; 24
    1e48:	a8 95       	wdr
    1e4a:	21 50       	subi	r18, 0x01	; 1
    1e4c:	a1 f7       	brne	.-24     	; 0x1e36 <main+0x36>
    1e4e:	88 24       	eor	r8, r8
    1e50:	99 24       	eor	r9, r9
    1e52:	cc 24       	eor	r12, r12
    1e54:	c3 94       	inc	r12
    1e56:	f5 e0       	ldi	r31, 0x05	; 5
    1e58:	df 2e       	mov	r13, r31
    1e5a:	e1 e1       	ldi	r30, 0x11	; 17
    1e5c:	ee 2e       	mov	r14, r30
    1e5e:	73 e0       	ldi	r23, 0x03	; 3
    1e60:	f7 2e       	mov	r15, r23
    1e62:	aa d0       	rcall	.+340    	; 0x1fb8 <getch>
    1e64:	81 34       	cpi	r24, 0x41	; 65
    1e66:	89 f4       	brne	.+34     	; 0x1e8a <main+0x8a>
    1e68:	a7 d0       	rcall	.+334    	; 0x1fb8 <getch>
    1e6a:	89 83       	std	Y+1, r24	; 0x01
    1e6c:	b0 d0       	rcall	.+352    	; 0x1fce <verifySpace>
    1e6e:	89 81       	ldd	r24, Y+1	; 0x01
    1e70:	82 38       	cpi	r24, 0x82	; 130
    1e72:	19 f4       	brne	.+6      	; 0x1e7a <main+0x7a>
    1e74:	84 e0       	ldi	r24, 0x04	; 4
    1e76:	9c d0       	rcall	.+312    	; 0x1fb0 <putch>
    1e78:	98 c0       	rjmp	.+304    	; 0x1faa <main+0x1aa>
    1e7a:	81 38       	cpi	r24, 0x81	; 129
    1e7c:	19 f4       	brne	.+6      	; 0x1e84 <main+0x84>
    1e7e:	84 e0       	ldi	r24, 0x04	; 4
    1e80:	97 d0       	rcall	.+302    	; 0x1fb0 <putch>
    1e82:	93 c0       	rjmp	.+294    	; 0x1faa <main+0x1aa>
    1e84:	83 e0       	ldi	r24, 0x03	; 3
    1e86:	94 d0       	rcall	.+296    	; 0x1fb0 <putch>
    1e88:	90 c0       	rjmp	.+288    	; 0x1faa <main+0x1aa>
    1e8a:	82 34       	cpi	r24, 0x42	; 66
    1e8c:	19 f4       	brne	.+6      	; 0x1e94 <main+0x94>
    1e8e:	84 e1       	ldi	r24, 0x14	; 20
    1e90:	a6 d0       	rcall	.+332    	; 0x1fde <getNch>
    1e92:	8b c0       	rjmp	.+278    	; 0x1faa <main+0x1aa>
    1e94:	85 34       	cpi	r24, 0x45	; 69
    1e96:	19 f4       	brne	.+6      	; 0x1e9e <main+0x9e>
    1e98:	85 e0       	ldi	r24, 0x05	; 5
    1e9a:	a1 d0       	rcall	.+322    	; 0x1fde <getNch>
    1e9c:	86 c0       	rjmp	.+268    	; 0x1faa <main+0x1aa>
    1e9e:	85 35       	cpi	r24, 0x55	; 85
    1ea0:	69 f4       	brne	.+26     	; 0x1ebc <main+0xbc>
    1ea2:	8a d0       	rcall	.+276    	; 0x1fb8 <getch>
    1ea4:	08 2f       	mov	r16, r24
    1ea6:	10 e0       	ldi	r17, 0x00	; 0
    1ea8:	87 d0       	rcall	.+270    	; 0x1fb8 <getch>
    1eaa:	90 e0       	ldi	r25, 0x00	; 0
    1eac:	98 2e       	mov	r9, r24
    1eae:	88 24       	eor	r8, r8
    1eb0:	80 2a       	or	r8, r16
    1eb2:	91 2a       	or	r9, r17
    1eb4:	88 0c       	add	r8, r8
    1eb6:	99 1c       	adc	r9, r9
    1eb8:	8a d0       	rcall	.+276    	; 0x1fce <verifySpace>
    1eba:	77 c0       	rjmp	.+238    	; 0x1faa <main+0x1aa>
    1ebc:	86 35       	cpi	r24, 0x56	; 86
    1ebe:	29 f4       	brne	.+10     	; 0x1eca <main+0xca>
    1ec0:	84 e0       	ldi	r24, 0x04	; 4
    1ec2:	8d d0       	rcall	.+282    	; 0x1fde <getNch>
    1ec4:	80 e0       	ldi	r24, 0x00	; 0
    1ec6:	74 d0       	rcall	.+232    	; 0x1fb0 <putch>
    1ec8:	70 c0       	rjmp	.+224    	; 0x1faa <main+0x1aa>
    1eca:	84 36       	cpi	r24, 0x64	; 100
    1ecc:	09 f0       	breq	.+2      	; 0x1ed0 <main+0xd0>
    1ece:	43 c0       	rjmp	.+134    	; 0x1f56 <main+0x156>
    1ed0:	73 d0       	rcall	.+230    	; 0x1fb8 <getch>
    1ed2:	72 d0       	rcall	.+228    	; 0x1fb8 <getch>
    1ed4:	b8 2e       	mov	r11, r24
    1ed6:	70 d0       	rcall	.+224    	; 0x1fb8 <getch>
    1ed8:	80 e0       	ldi	r24, 0x00	; 0
    1eda:	88 16       	cp	r8, r24
    1edc:	88 e1       	ldi	r24, 0x18	; 24
    1ede:	98 06       	cpc	r9, r24
    1ee0:	30 f4       	brcc	.+12     	; 0x1eee <main+0xee>
    1ee2:	f4 01       	movw	r30, r8
    1ee4:	f7 be       	out	0x37, r15	; 55
    1ee6:	e8 95       	spm
    1ee8:	00 e0       	ldi	r16, 0x00	; 0
    1eea:	11 e0       	ldi	r17, 0x01	; 1
    1eec:	02 c0       	rjmp	.+4      	; 0x1ef2 <main+0xf2>
    1eee:	00 e0       	ldi	r16, 0x00	; 0
    1ef0:	11 e0       	ldi	r17, 0x01	; 1
    1ef2:	62 d0       	rcall	.+196    	; 0x1fb8 <getch>
    1ef4:	f8 01       	movw	r30, r16
    1ef6:	81 93       	st	Z+, r24
    1ef8:	8f 01       	movw	r16, r30
    1efa:	be 16       	cp	r11, r30
    1efc:	d1 f7       	brne	.-12     	; 0x1ef2 <main+0xf2>
    1efe:	f0 e0       	ldi	r31, 0x00	; 0
    1f00:	8f 16       	cp	r8, r31
    1f02:	f8 e1       	ldi	r31, 0x18	; 24
    1f04:	9f 06       	cpc	r9, r31
    1f06:	18 f0       	brcs	.+6      	; 0x1f0e <main+0x10e>
    1f08:	f4 01       	movw	r30, r8
    1f0a:	f7 be       	out	0x37, r15	; 55
    1f0c:	e8 95       	spm
    1f0e:	5f d0       	rcall	.+190    	; 0x1fce <verifySpace>
    1f10:	07 b6       	in	r0, 0x37	; 55
    1f12:	00 fc       	sbrc	r0, 0
    1f14:	fd cf       	rjmp	.-6      	; 0x1f10 <main+0x110>
    1f16:	f4 01       	movw	r30, r8
    1f18:	a0 e0       	ldi	r26, 0x00	; 0
    1f1a:	b1 e0       	ldi	r27, 0x01	; 1
    1f1c:	2c 91       	ld	r18, X
    1f1e:	30 e0       	ldi	r19, 0x00	; 0
    1f20:	11 96       	adiw	r26, 0x01	; 1
    1f22:	8c 91       	ld	r24, X
    1f24:	11 97       	sbiw	r26, 0x01	; 1
    1f26:	90 e0       	ldi	r25, 0x00	; 0
    1f28:	98 2f       	mov	r25, r24
    1f2a:	88 27       	eor	r24, r24
    1f2c:	82 2b       	or	r24, r18
    1f2e:	93 2b       	or	r25, r19
    1f30:	12 96       	adiw	r26, 0x02	; 2
    1f32:	0c 01       	movw	r0, r24
    1f34:	c7 be       	out	0x37, r12	; 55
    1f36:	e8 95       	spm
    1f38:	11 24       	eor	r1, r1
    1f3a:	32 96       	adiw	r30, 0x02	; 2
    1f3c:	81 e0       	ldi	r24, 0x01	; 1
    1f3e:	a0 34       	cpi	r26, 0x40	; 64
    1f40:	b8 07       	cpc	r27, r24
    1f42:	61 f7       	brne	.-40     	; 0x1f1c <main+0x11c>
    1f44:	f4 01       	movw	r30, r8
    1f46:	d7 be       	out	0x37, r13	; 55
    1f48:	e8 95       	spm
    1f4a:	07 b6       	in	r0, 0x37	; 55
    1f4c:	00 fc       	sbrc	r0, 0
    1f4e:	fd cf       	rjmp	.-6      	; 0x1f4a <main+0x14a>
    1f50:	e7 be       	out	0x37, r14	; 55
    1f52:	e8 95       	spm
    1f54:	2a c0       	rjmp	.+84     	; 0x1faa <main+0x1aa>
    1f56:	84 37       	cpi	r24, 0x74	; 116
    1f58:	b9 f4       	brne	.+46     	; 0x1f88 <main+0x188>
    1f5a:	2e d0       	rcall	.+92     	; 0x1fb8 <getch>
    1f5c:	2d d0       	rcall	.+90     	; 0x1fb8 <getch>
    1f5e:	a8 2e       	mov	r10, r24
    1f60:	2b d0       	rcall	.+86     	; 0x1fb8 <getch>
    1f62:	35 d0       	rcall	.+106    	; 0x1fce <verifySpace>
    1f64:	ba 2c       	mov	r11, r10
    1f66:	f4 01       	movw	r30, r8
    1f68:	01 c0       	rjmp	.+2      	; 0x1f6c <main+0x16c>
    1f6a:	f8 01       	movw	r30, r16
    1f6c:	8f 01       	movw	r16, r30
    1f6e:	0f 5f       	subi	r16, 0xFF	; 255
    1f70:	1f 4f       	sbci	r17, 0xFF	; 255
    1f72:	84 91       	lpm	r24, Z+
    1f74:	1d d0       	rcall	.+58     	; 0x1fb0 <putch>
    1f76:	ba 94       	dec	r11
    1f78:	c1 f7       	brne	.-16     	; 0x1f6a <main+0x16a>
    1f7a:	08 94       	sec
    1f7c:	81 1c       	adc	r8, r1
    1f7e:	91 1c       	adc	r9, r1
    1f80:	aa 94       	dec	r10
    1f82:	8a 0c       	add	r8, r10
    1f84:	91 1c       	adc	r9, r1
    1f86:	11 c0       	rjmp	.+34     	; 0x1faa <main+0x1aa>
    1f88:	85 37       	cpi	r24, 0x75	; 117
    1f8a:	41 f4       	brne	.+16     	; 0x1f9c <main+0x19c>
    1f8c:	20 d0       	rcall	.+64     	; 0x1fce <verifySpace>
    1f8e:	8e e1       	ldi	r24, 0x1E	; 30
    1f90:	0f d0       	rcall	.+30     	; 0x1fb0 <putch>
    1f92:	83 e9       	ldi	r24, 0x93	; 147
    1f94:	0d d0       	rcall	.+26     	; 0x1fb0 <putch>
    1f96:	87 e0       	ldi	r24, 0x07	; 7
    1f98:	0b d0       	rcall	.+22     	; 0x1fb0 <putch>
    1f9a:	07 c0       	rjmp	.+14     	; 0x1faa <main+0x1aa>
    1f9c:	81 35       	cpi	r24, 0x51	; 81
    1f9e:	21 f4       	brne	.+8      	; 0x1fa8 <main+0x1a8>
    1fa0:	88 e0       	ldi	r24, 0x08	; 8
    1fa2:	11 d0       	rcall	.+34     	; 0x1fc6 <watchdogConfig>
    1fa4:	14 d0       	rcall	.+40     	; 0x1fce <verifySpace>
    1fa6:	01 c0       	rjmp	.+2      	; 0x1faa <main+0x1aa>
    1fa8:	12 d0       	rcall	.+36     	; 0x1fce <verifySpace>
    1faa:	80 e1       	ldi	r24, 0x10	; 16
    1fac:	01 d0       	rcall	.+2      	; 0x1fb0 <putch>
    1fae:	59 cf       	rjmp	.-334    	; 0x1e62 <main+0x62>

00001fb0 <putch>:
  }
}

void putch(char ch) {
#ifndef SOFT_UART
  while (!(UCSR0A & _BV(UDRE0)));
    1fb0:	5d 9b       	sbis	0x0b, 5	; 11
    1fb2:	fe cf       	rjmp	.-4      	; 0x1fb0 <putch>
  UDR0 = ch;
    1fb4:	8c b9       	out	0x0c, r24	; 12
      [uartBit] "I" (UART_TX_BIT)
    :
      "r25"
  );
#endif
}
    1fb6:	08 95       	ret

00001fb8 <getch>:
      [uartBit] "I" (UART_RX_BIT)
    :
      "r25"
);
#else
  while(!(UCSR0A & _BV(RXC0)))
    1fb8:	5f 9b       	sbis	0x0b, 7	; 11
    1fba:	fe cf       	rjmp	.-4      	; 0x1fb8 <getch>
    ;
  if (!(UCSR0A & _BV(FE0))) {
    1fbc:	5c 99       	sbic	0x0b, 4	; 11
    1fbe:	01 c0       	rjmp	.+2      	; 0x1fc2 <getch+0xa>
}
#endif

// Watchdog functions. These are only safe with interrupts turned off.
void watchdogReset() {
  __asm__ __volatile__ (
    1fc0:	a8 95       	wdr
       * don't care that an invalid char is returned...)
       */
    watchdogReset();
  }
  
  ch = UDR0;
    1fc2:	8c b1       	in	r24, 0x0c	; 12
  LED_PIN |= _BV(LED);
#endif
#endif

  return ch;
}
    1fc4:	08 95       	ret

00001fc6 <watchdogConfig>:
    "wdr\n"
  );
}

void watchdogConfig(uint8_t x) {
  WDTCSR = _BV(WDCE) | _BV(WDE);
    1fc6:	98 e1       	ldi	r25, 0x18	; 24
    1fc8:	91 bd       	out	0x21, r25	; 33
  WDTCSR = x;
    1fca:	81 bd       	out	0x21, r24	; 33
}
    1fcc:	08 95       	ret

00001fce <verifySpace>:
  do getch(); while (--count);
  verifySpace();
}

void verifySpace() {
  if (getch() != CRC_EOP) {
    1fce:	f4 df       	rcall	.-24     	; 0x1fb8 <getch>
    1fd0:	80 32       	cpi	r24, 0x20	; 32
    1fd2:	19 f0       	breq	.+6      	; 0x1fda <verifySpace+0xc>
    watchdogConfig(WATCHDOG_16MS);    // shorten WD timeout
    1fd4:	88 e0       	ldi	r24, 0x08	; 8
    1fd6:	f7 df       	rcall	.-18     	; 0x1fc6 <watchdogConfig>
    1fd8:	ff cf       	rjmp	.-2      	; 0x1fd8 <verifySpace+0xa>
    while (1)			      // and busy-loop so that WD causes
      ;				      //  a reset and app start.
  }
  putch(STK_INSYNC);
    1fda:	84 e1       	ldi	r24, 0x14	; 20
    1fdc:	e9 cf       	rjmp	.-46     	; 0x1fb0 <putch>

00001fde <getNch>:
    ::[count] "M" (UART_B_VALUE)
  );
}
#endif

void getNch(uint8_t count) {
    1fde:	1f 93       	push	r17
    1fe0:	18 2f       	mov	r17, r24
  do getch(); while (--count);
    1fe2:	ea df       	rcall	.-44     	; 0x1fb8 <getch>
    1fe4:	11 50       	subi	r17, 0x01	; 1
    1fe6:	e9 f7       	brne	.-6      	; 0x1fe2 <getNch+0x4>
  verifySpace();
    1fe8:	f2 df       	rcall	.-28     	; 0x1fce <verifySpace>
}
    1fea:	1f 91       	pop	r17
    1fec:	08 95       	ret

00001fee <appStart>:
  WDTCSR = _BV(WDCE) | _BV(WDE);
  WDTCSR = x;
}

void appStart() {
  watchdogConfig(WATCHDOG_OFF);
    1fee:	80 e0       	ldi	r24, 0x00	; 0
    1ff0:	ea df       	rcall	.-44     	; 0x1fc6 <watchdogConfig>
  __asm__ __volatile__ (
    1ff2:	ee 27       	eor	r30, r30
    1ff4:	ff 27       	eor	r31, r31
    1ff6:	09 94       	ijmp
